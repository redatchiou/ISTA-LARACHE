name: Tests

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [8.1, 8.2]

    name: PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql
          coverage: none

      - name: Start MySQL service
        uses: docker://mysql:5.7
        with:
          env: |
            MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
            MYSQL_ALLOW_EMPTY_PASSWORD: ${{ env.MYSQL_ALLOW_EMPTY_PASSWORD }}
            MYSQL_RANDOM_ROOT_PASSWORD: ${{ env.MYSQL_RANDOM_ROOT_PASSWORD }}

      - name: Install Node dependencies
        run: npm install --prefer-dist --no-interaction --no-progress

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mysql -h localhost -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS my_database"

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_HOST: localhost
          DB_PORT: 3306
          DB_DATABASE: my_database
          DB_USERNAME: root
          DB_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        run: vendor/bin/phpunit
